# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mtm.sppb import ag_pb2 as mtm_dot_sppb_dot_ag__pb2


class AgServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Greet = channel.stream_unary(
                '/mtmai.mtm.sppb.AgService/Greet',
                request_serializer=mtm_dot_sppb_dot_ag__pb2.GreetRequest.SerializeToString,
                response_deserializer=mtm_dot_sppb_dot_ag__pb2.GreetResponse.FromString,
                _registered_method=True)
        self.Greet2 = channel.unary_stream(
                '/mtmai.mtm.sppb.AgService/Greet2',
                request_serializer=mtm_dot_sppb_dot_ag__pb2.GreetRequest.SerializeToString,
                response_deserializer=mtm_dot_sppb_dot_ag__pb2.GreetResponse.FromString,
                _registered_method=True)
        self.ComponentList = channel.unary_unary(
                '/mtmai.mtm.sppb.AgService/ComponentList',
                request_serializer=mtm_dot_sppb_dot_ag__pb2.ComponentListReq.SerializeToString,
                response_deserializer=mtm_dot_sppb_dot_ag__pb2.ComponentListRes.FromString,
                _registered_method=True)
        self.GetComponent = channel.unary_unary(
                '/mtmai.mtm.sppb.AgService/GetComponent',
                request_serializer=mtm_dot_sppb_dot_ag__pb2.GetComponentReq.SerializeToString,
                response_deserializer=mtm_dot_sppb_dot_ag__pb2.Component.FromString,
                _registered_method=True)


class AgServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Greet(self, request_iterator, context):
        """demos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Greet2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComponentList(self, request, context):
        """component
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComponent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Greet': grpc.stream_unary_rpc_method_handler(
                    servicer.Greet,
                    request_deserializer=mtm_dot_sppb_dot_ag__pb2.GreetRequest.FromString,
                    response_serializer=mtm_dot_sppb_dot_ag__pb2.GreetResponse.SerializeToString,
            ),
            'Greet2': grpc.unary_stream_rpc_method_handler(
                    servicer.Greet2,
                    request_deserializer=mtm_dot_sppb_dot_ag__pb2.GreetRequest.FromString,
                    response_serializer=mtm_dot_sppb_dot_ag__pb2.GreetResponse.SerializeToString,
            ),
            'ComponentList': grpc.unary_unary_rpc_method_handler(
                    servicer.ComponentList,
                    request_deserializer=mtm_dot_sppb_dot_ag__pb2.ComponentListReq.FromString,
                    response_serializer=mtm_dot_sppb_dot_ag__pb2.ComponentListRes.SerializeToString,
            ),
            'GetComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComponent,
                    request_deserializer=mtm_dot_sppb_dot_ag__pb2.GetComponentReq.FromString,
                    response_serializer=mtm_dot_sppb_dot_ag__pb2.Component.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mtmai.mtm.sppb.AgService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mtmai.mtm.sppb.AgService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AgService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Greet(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/mtmai.mtm.sppb.AgService/Greet',
            mtm_dot_sppb_dot_ag__pb2.GreetRequest.SerializeToString,
            mtm_dot_sppb_dot_ag__pb2.GreetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Greet2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mtmai.mtm.sppb.AgService/Greet2',
            mtm_dot_sppb_dot_ag__pb2.GreetRequest.SerializeToString,
            mtm_dot_sppb_dot_ag__pb2.GreetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ComponentList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtm.sppb.AgService/ComponentList',
            mtm_dot_sppb_dot_ag__pb2.ComponentListReq.SerializeToString,
            mtm_dot_sppb_dot_ag__pb2.ComponentListRes.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtm.sppb.AgService/GetComponent',
            mtm_dot_sppb_dot_ag__pb2.GetComponentReq.SerializeToString,
            mtm_dot_sppb_dot_ag__pb2.Component.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
